# Треугольник Паскаля — бесконечная таблица биномиальных коэффициентов, имеющая треугольную форму.
# В этом треугольнике на вершине и по бокам стоят единицы. Каждое число равно сумме двух расположенных над ним чисел.
#
# 0:      1
# 1:     1 1
# 2:    1 2 1
# 3:   1 3 3 1
# 4:  1 4 6 4 1
#       .....
# На вход программе подается число n. Напишите программу, которая возвращает указанную строку треугольника Паскаля
# в виде списка (нумерация строк начинается с нуля).
#
# Формат входных данных
# На вход программе подается число n (n≥0).
#
# Формат выходных данных
# Программа должна вывести указанную строку треугольника Паскаля в виде списка.
#
# Примечание 1. Решение удобно оформить в виде функции pascal(), которая принимает номер строки и
# возвращает соответствующую строку треугольника Паскаля.


def pascal_1(number):
    pascal_triangle = []
    for i in range(number + 1):
        row = [1] * (i + 1)
        for j in range(i + 1):
            if j != 0 and j != i:
                row[j] = pascal_triangle[i - 1][j - 1] + pascal_triangle[i - 1][j]
        pascal_triangle.append(row)
    return pascal_triangle


number = int(input())

print(pascal_1(number)[number])

# =============================
#
# # -------------------ФУНКЦИЯ-------------------
# def pascal(n):
#     triangle = [[1]]
#
#     for i in range(n):
#         row = [1]
#         for j in range(1, len(triangle[i])):
#             row += [sum(triangle[i][j - 1: j + 1])]
#         row += [1]
#         triangle.append(row.copy())
#
#     return triangle[n]
#
#
# # --------------------ВЫЗОВ--------------------
# print(pascal(int(input())))

# ================================
# def pascal(n):
#     # начальная строка
#     cur_seq = [1]
#
#     for _ in range(n):
#         # добавляем нули по бокам к текущей строке строке
#         cur_seq = [0] + cur_seq + [0]
#         # тут будет храниться новая строка
#         new_seq = []
#
#         for i in range(len(cur_seq) - 1):
#             # добавляем в новую строку сумму соседних элементов текущей строки
#             new_seq.append(cur_seq[i] + cur_seq[i + 1])
#
#         # теперь новая строка становится нашей текущей строкой
#         cur_seq = new_seq
#
#     return cur_seq
#
#
# n = int(input())
# print(pascal(n))
